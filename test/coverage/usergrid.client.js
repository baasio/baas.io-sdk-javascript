/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['usergrid.client.js']) {
  _$jscoverage['usergrid.client.js'] = [];
  _$jscoverage['usergrid.client.js'][13] = 0;
  _$jscoverage['usergrid.client.js'][15] = 0;
  _$jscoverage['usergrid.client.js'][16] = 0;
  _$jscoverage['usergrid.client.js'][19] = 0;
  _$jscoverage['usergrid.client.js'][20] = 0;
  _$jscoverage['usergrid.client.js'][23] = 0;
  _$jscoverage['usergrid.client.js'][24] = 0;
  _$jscoverage['usergrid.client.js'][27] = 0;
  _$jscoverage['usergrid.client.js'][30] = 0;
  _$jscoverage['usergrid.client.js'][33] = 0;
  _$jscoverage['usergrid.client.js'][34] = 0;
  _$jscoverage['usergrid.client.js'][35] = 0;
  _$jscoverage['usergrid.client.js'][38] = 0;
  _$jscoverage['usergrid.client.js'][39] = 0;
  _$jscoverage['usergrid.client.js'][40] = 0;
  _$jscoverage['usergrid.client.js'][45] = 0;
  _$jscoverage['usergrid.client.js'][46] = 0;
  _$jscoverage['usergrid.client.js'][49] = 0;
  _$jscoverage['usergrid.client.js'][52] = 0;
  _$jscoverage['usergrid.client.js'][53] = 0;
  _$jscoverage['usergrid.client.js'][56] = 0;
  _$jscoverage['usergrid.client.js'][61] = 0;
  _$jscoverage['usergrid.client.js'][62] = 0;
  _$jscoverage['usergrid.client.js'][65] = 0;
  _$jscoverage['usergrid.client.js'][66] = 0;
  _$jscoverage['usergrid.client.js'][69] = 0;
  _$jscoverage['usergrid.client.js'][70] = 0;
  _$jscoverage['usergrid.client.js'][73] = 0;
  _$jscoverage['usergrid.client.js'][74] = 0;
  _$jscoverage['usergrid.client.js'][77] = 0;
  _$jscoverage['usergrid.client.js'][82] = 0;
  _$jscoverage['usergrid.client.js'][83] = 0;
  _$jscoverage['usergrid.client.js'][86] = 0;
  _$jscoverage['usergrid.client.js'][91] = 0;
  _$jscoverage['usergrid.client.js'][92] = 0;
  _$jscoverage['usergrid.client.js'][93] = 0;
  _$jscoverage['usergrid.client.js'][94] = 0;
  _$jscoverage['usergrid.client.js'][99] = 0;
  _$jscoverage['usergrid.client.js'][100] = 0;
  _$jscoverage['usergrid.client.js'][101] = 0;
  _$jscoverage['usergrid.client.js'][102] = 0;
  _$jscoverage['usergrid.client.js'][103] = 0;
  _$jscoverage['usergrid.client.js'][108] = 0;
  _$jscoverage['usergrid.client.js'][109] = 0;
  _$jscoverage['usergrid.client.js'][110] = 0;
  _$jscoverage['usergrid.client.js'][114] = 0;
  _$jscoverage['usergrid.client.js'][116] = 0;
  _$jscoverage['usergrid.client.js'][119] = 0;
  _$jscoverage['usergrid.client.js'][120] = 0;
  _$jscoverage['usergrid.client.js'][123] = 0;
  _$jscoverage['usergrid.client.js'][124] = 0;
  _$jscoverage['usergrid.client.js'][125] = 0;
  _$jscoverage['usergrid.client.js'][126] = 0;
  _$jscoverage['usergrid.client.js'][127] = 0;
  _$jscoverage['usergrid.client.js'][130] = 0;
  _$jscoverage['usergrid.client.js'][131] = 0;
  _$jscoverage['usergrid.client.js'][132] = 0;
  _$jscoverage['usergrid.client.js'][135] = 0;
  _$jscoverage['usergrid.client.js'][136] = 0;
  _$jscoverage['usergrid.client.js'][137] = 0;
  _$jscoverage['usergrid.client.js'][139] = 0;
  _$jscoverage['usergrid.client.js'][140] = 0;
  _$jscoverage['usergrid.client.js'][143] = 0;
  _$jscoverage['usergrid.client.js'][144] = 0;
  _$jscoverage['usergrid.client.js'][147] = 0;
  _$jscoverage['usergrid.client.js'][148] = 0;
  _$jscoverage['usergrid.client.js'][149] = 0;
  _$jscoverage['usergrid.client.js'][152] = 0;
  _$jscoverage['usergrid.client.js'][153] = 0;
  _$jscoverage['usergrid.client.js'][154] = 0;
  _$jscoverage['usergrid.client.js'][157] = 0;
  _$jscoverage['usergrid.client.js'][158] = 0;
  _$jscoverage['usergrid.client.js'][159] = 0;
  _$jscoverage['usergrid.client.js'][162] = 0;
  _$jscoverage['usergrid.client.js'][163] = 0;
  _$jscoverage['usergrid.client.js'][166] = 0;
  _$jscoverage['usergrid.client.js'][176] = 0;
  _$jscoverage['usergrid.client.js'][177] = 0;
  _$jscoverage['usergrid.client.js'][178] = 0;
  _$jscoverage['usergrid.client.js'][183] = 0;
  _$jscoverage['usergrid.client.js'][185] = 0;
  _$jscoverage['usergrid.client.js'][186] = 0;
  _$jscoverage['usergrid.client.js'][187] = 0;
  _$jscoverage['usergrid.client.js'][189] = 0;
  _$jscoverage['usergrid.client.js'][190] = 0;
  _$jscoverage['usergrid.client.js'][191] = 0;
  _$jscoverage['usergrid.client.js'][192] = 0;
  _$jscoverage['usergrid.client.js'][193] = 0;
  _$jscoverage['usergrid.client.js'][195] = 0;
  _$jscoverage['usergrid.client.js'][196] = 0;
  _$jscoverage['usergrid.client.js'][197] = 0;
  _$jscoverage['usergrid.client.js'][204] = 0;
  _$jscoverage['usergrid.client.js'][206] = 0;
  _$jscoverage['usergrid.client.js'][208] = 0;
  _$jscoverage['usergrid.client.js'][209] = 0;
  _$jscoverage['usergrid.client.js'][210] = 0;
  _$jscoverage['usergrid.client.js'][212] = 0;
  _$jscoverage['usergrid.client.js'][213] = 0;
  _$jscoverage['usergrid.client.js'][215] = 0;
  _$jscoverage['usergrid.client.js'][216] = 0;
  _$jscoverage['usergrid.client.js'][217] = 0;
  _$jscoverage['usergrid.client.js'][219] = 0;
  _$jscoverage['usergrid.client.js'][220] = 0;
  _$jscoverage['usergrid.client.js'][221] = 0;
  _$jscoverage['usergrid.client.js'][222] = 0;
  _$jscoverage['usergrid.client.js'][223] = 0;
  _$jscoverage['usergrid.client.js'][225] = 0;
  _$jscoverage['usergrid.client.js'][226] = 0;
  _$jscoverage['usergrid.client.js'][227] = 0;
  _$jscoverage['usergrid.client.js'][231] = 0;
  _$jscoverage['usergrid.client.js'][232] = 0;
  _$jscoverage['usergrid.client.js'][235] = 0;
  _$jscoverage['usergrid.client.js'][237] = 0;
  _$jscoverage['usergrid.client.js'][277] = 0;
  _$jscoverage['usergrid.client.js'][279] = 0;
  _$jscoverage['usergrid.client.js'][280] = 0;
  _$jscoverage['usergrid.client.js'][281] = 0;
  _$jscoverage['usergrid.client.js'][282] = 0;
  _$jscoverage['usergrid.client.js'][283] = 0;
  _$jscoverage['usergrid.client.js'][284] = 0;
  _$jscoverage['usergrid.client.js'][287] = 0;
  _$jscoverage['usergrid.client.js'][290] = 0;
  _$jscoverage['usergrid.client.js'][291] = 0;
  _$jscoverage['usergrid.client.js'][292] = 0;
  _$jscoverage['usergrid.client.js'][295] = 0;
  _$jscoverage['usergrid.client.js'][296] = 0;
  _$jscoverage['usergrid.client.js'][298] = 0;
  _$jscoverage['usergrid.client.js'][299] = 0;
  _$jscoverage['usergrid.client.js'][301] = 0;
  _$jscoverage['usergrid.client.js'][302] = 0;
  _$jscoverage['usergrid.client.js'][304] = 0;
  _$jscoverage['usergrid.client.js'][305] = 0;
  _$jscoverage['usergrid.client.js'][307] = 0;
  _$jscoverage['usergrid.client.js'][308] = 0;
  _$jscoverage['usergrid.client.js'][309] = 0;
  _$jscoverage['usergrid.client.js'][311] = 0;
  _$jscoverage['usergrid.client.js'][312] = 0;
  _$jscoverage['usergrid.client.js'][313] = 0;
  _$jscoverage['usergrid.client.js'][315] = 0;
  _$jscoverage['usergrid.client.js'][316] = 0;
  _$jscoverage['usergrid.client.js'][319] = 0;
  _$jscoverage['usergrid.client.js'][320] = 0;
  _$jscoverage['usergrid.client.js'][321] = 0;
  _$jscoverage['usergrid.client.js'][322] = 0;
  _$jscoverage['usergrid.client.js'][325] = 0;
  _$jscoverage['usergrid.client.js'][326] = 0;
  _$jscoverage['usergrid.client.js'][329] = 0;
  _$jscoverage['usergrid.client.js'][330] = 0;
  _$jscoverage['usergrid.client.js'][331] = 0;
  _$jscoverage['usergrid.client.js'][334] = 0;
  _$jscoverage['usergrid.client.js'][335] = 0;
  _$jscoverage['usergrid.client.js'][338] = 0;
  _$jscoverage['usergrid.client.js'][339] = 0;
  _$jscoverage['usergrid.client.js'][340] = 0;
  _$jscoverage['usergrid.client.js'][343] = 0;
  _$jscoverage['usergrid.client.js'][344] = 0;
  _$jscoverage['usergrid.client.js'][346] = 0;
  _$jscoverage['usergrid.client.js'][347] = 0;
  _$jscoverage['usergrid.client.js'][349] = 0;
  _$jscoverage['usergrid.client.js'][353] = 0;
  _$jscoverage['usergrid.client.js'][354] = 0;
  _$jscoverage['usergrid.client.js'][364] = 0;
  _$jscoverage['usergrid.client.js'][365] = 0;
  _$jscoverage['usergrid.client.js'][366] = 0;
  _$jscoverage['usergrid.client.js'][375] = 0;
  _$jscoverage['usergrid.client.js'][376] = 0;
  _$jscoverage['usergrid.client.js'][377] = 0;
  _$jscoverage['usergrid.client.js'][386] = 0;
  _$jscoverage['usergrid.client.js'][387] = 0;
  _$jscoverage['usergrid.client.js'][389] = 0;
  _$jscoverage['usergrid.client.js'][390] = 0;
  _$jscoverage['usergrid.client.js'][391] = 0;
  _$jscoverage['usergrid.client.js'][392] = 0;
  _$jscoverage['usergrid.client.js'][393] = 0;
  _$jscoverage['usergrid.client.js'][396] = 0;
  _$jscoverage['usergrid.client.js'][397] = 0;
  _$jscoverage['usergrid.client.js'][400] = 0;
  _$jscoverage['usergrid.client.js'][401] = 0;
  _$jscoverage['usergrid.client.js'][402] = 0;
  _$jscoverage['usergrid.client.js'][403] = 0;
  _$jscoverage['usergrid.client.js'][406] = 0;
  _$jscoverage['usergrid.client.js'][407] = 0;
  _$jscoverage['usergrid.client.js'][408] = 0;
  _$jscoverage['usergrid.client.js'][410] = 0;
  _$jscoverage['usergrid.client.js'][411] = 0;
  _$jscoverage['usergrid.client.js'][415] = 0;
  _$jscoverage['usergrid.client.js'][416] = 0;
  _$jscoverage['usergrid.client.js'][417] = 0;
  _$jscoverage['usergrid.client.js'][421] = 0;
  _$jscoverage['usergrid.client.js'][422] = 0;
  _$jscoverage['usergrid.client.js'][424] = 0;
  _$jscoverage['usergrid.client.js'][428] = 0;
  _$jscoverage['usergrid.client.js'][431] = 0;
  _$jscoverage['usergrid.client.js'][433] = 0;
  _$jscoverage['usergrid.client.js'][434] = 0;
  _$jscoverage['usergrid.client.js'][439] = 0;
  _$jscoverage['usergrid.client.js'][442] = 0;
  _$jscoverage['usergrid.client.js'][443] = 0;
  _$jscoverage['usergrid.client.js'][444] = 0;
  _$jscoverage['usergrid.client.js'][448] = 0;
  _$jscoverage['usergrid.client.js'][449] = 0;
  _$jscoverage['usergrid.client.js'][453] = 0;
  _$jscoverage['usergrid.client.js'][454] = 0;
  _$jscoverage['usergrid.client.js'][455] = 0;
  _$jscoverage['usergrid.client.js'][459] = 0;
  _$jscoverage['usergrid.client.js'][460] = 0;
  _$jscoverage['usergrid.client.js'][461] = 0;
  _$jscoverage['usergrid.client.js'][463] = 0;
  _$jscoverage['usergrid.client.js'][464] = 0;
  _$jscoverage['usergrid.client.js'][467] = 0;
  _$jscoverage['usergrid.client.js'][472] = 0;
  _$jscoverage['usergrid.client.js'][473] = 0;
  _$jscoverage['usergrid.client.js'][476] = 0;
  _$jscoverage['usergrid.client.js'][478] = 0;
  _$jscoverage['usergrid.client.js'][481] = 0;
  _$jscoverage['usergrid.client.js'][484] = 0;
  _$jscoverage['usergrid.client.js'][486] = 0;
  _$jscoverage['usergrid.client.js'][489] = 0;
  _$jscoverage['usergrid.client.js'][490] = 0;
  _$jscoverage['usergrid.client.js'][501] = 0;
  _$jscoverage['usergrid.client.js'][503] = 0;
  _$jscoverage['usergrid.client.js'][514] = 0;
  _$jscoverage['usergrid.client.js'][515] = 0;
  _$jscoverage['usergrid.client.js'][516] = 0;
  _$jscoverage['usergrid.client.js'][517] = 0;
  _$jscoverage['usergrid.client.js'][519] = 0;
  _$jscoverage['usergrid.client.js'][520] = 0;
  _$jscoverage['usergrid.client.js'][524] = 0;
  _$jscoverage['usergrid.client.js'][533] = 0;
  _$jscoverage['usergrid.client.js'][534] = 0;
  _$jscoverage['usergrid.client.js'][535] = 0;
  _$jscoverage['usergrid.client.js'][536] = 0;
  _$jscoverage['usergrid.client.js'][537] = 0;
  _$jscoverage['usergrid.client.js'][538] = 0;
  _$jscoverage['usergrid.client.js'][539] = 0;
  _$jscoverage['usergrid.client.js'][540] = 0;
  _$jscoverage['usergrid.client.js'][544] = 0;
  _$jscoverage['usergrid.client.js'][545] = 0;
  _$jscoverage['usergrid.client.js'][546] = 0;
  _$jscoverage['usergrid.client.js'][547] = 0;
  _$jscoverage['usergrid.client.js'][548] = 0;
  _$jscoverage['usergrid.client.js'][549] = 0;
  _$jscoverage['usergrid.client.js'][550] = 0;
  _$jscoverage['usergrid.client.js'][553] = 0;
  _$jscoverage['usergrid.client.js'][558] = 0;
  _$jscoverage['usergrid.client.js'][566] = 0;
  _$jscoverage['usergrid.client.js'][567] = 0;
  _$jscoverage['usergrid.client.js'][570] = 0;
  _$jscoverage['usergrid.client.js'][571] = 0;
  _$jscoverage['usergrid.client.js'][574] = 0;
  _$jscoverage['usergrid.client.js'][575] = 0;
  _$jscoverage['usergrid.client.js'][576] = 0;
  _$jscoverage['usergrid.client.js'][577] = 0;
  _$jscoverage['usergrid.client.js'][580] = 0;
  _$jscoverage['usergrid.client.js'][581] = 0;
  _$jscoverage['usergrid.client.js'][582] = 0;
  _$jscoverage['usergrid.client.js'][583] = 0;
  _$jscoverage['usergrid.client.js'][584] = 0;
  _$jscoverage['usergrid.client.js'][587] = 0;
  _$jscoverage['usergrid.client.js'][588] = 0;
  _$jscoverage['usergrid.client.js'][589] = 0;
  _$jscoverage['usergrid.client.js'][590] = 0;
  _$jscoverage['usergrid.client.js'][591] = 0;
  _$jscoverage['usergrid.client.js'][594] = 0;
  _$jscoverage['usergrid.client.js'][595] = 0;
  _$jscoverage['usergrid.client.js'][596] = 0;
  _$jscoverage['usergrid.client.js'][597] = 0;
  _$jscoverage['usergrid.client.js'][598] = 0;
  _$jscoverage['usergrid.client.js'][599] = 0;
  _$jscoverage['usergrid.client.js'][601] = 0;
  _$jscoverage['usergrid.client.js'][602] = 0;
  _$jscoverage['usergrid.client.js'][603] = 0;
  _$jscoverage['usergrid.client.js'][605] = 0;
  _$jscoverage['usergrid.client.js'][614] = 0;
  _$jscoverage['usergrid.client.js'][632] = 0;
}
_$jscoverage['usergrid.client.js'][13]++;
var session = {getOrganizationObj: (function () {
  _$jscoverage['usergrid.client.js'][15]++;
  var organization = localStorage.getObject("currentOrganization");
  _$jscoverage['usergrid.client.js'][16]++;
  return organization;
}), getOrganizationUUID: (function () {
  _$jscoverage['usergrid.client.js'][19]++;
  var organization = localStorage.getObject("currentOrganization");
  _$jscoverage['usergrid.client.js'][20]++;
  return organization.uuid;
}), getOrganizationName: (function () {
  _$jscoverage['usergrid.client.js'][23]++;
  var organization = localStorage.getObject("currentOrganization");
  _$jscoverage['usergrid.client.js'][24]++;
  return organization.name;
}), setOrganization: (function (_organization) {
  _$jscoverage['usergrid.client.js'][27]++;
  localStorage.setObject("currentOrganization", _organization);
}), setOrganizationObj: (function (_organization) {
  _$jscoverage['usergrid.client.js'][30]++;
  localStorage.setObject("currentOrganization", _organization);
}), setOrganizationName: (function (_name) {
  _$jscoverage['usergrid.client.js'][33]++;
  organization = {};
  _$jscoverage['usergrid.client.js'][34]++;
  organization.name = _name;
  _$jscoverage['usergrid.client.js'][35]++;
  localStorage.setObject("currentOrganization", organization);
}), setOrganizationUUID: (function (_uuid) {
  _$jscoverage['usergrid.client.js'][38]++;
  organization = {};
  _$jscoverage['usergrid.client.js'][39]++;
  organization.uuid = _uuid;
  _$jscoverage['usergrid.client.js'][40]++;
  localStorage.setObject("currentOrganization", organization);
}), getApplicationId: (function () {
  _$jscoverage['usergrid.client.js'][45]++;
  var applicationId = localStorage.getItem("currentApplicationId");
  _$jscoverage['usergrid.client.js'][46]++;
  return applicationId;
}), setApplicationId: (function (_applicationId) {
  _$jscoverage['usergrid.client.js'][49]++;
  localStorage.setItem("currentApplicationId", _applicationId);
}), getApplicationName: (function () {
  _$jscoverage['usergrid.client.js'][52]++;
  var applicationName = localStorage.getItem("currentApplicationName");
  _$jscoverage['usergrid.client.js'][53]++;
  return applicationName;
}), setApplicationName: (function (_applicationName) {
  _$jscoverage['usergrid.client.js'][56]++;
  localStorage.setItem("currentApplicationName", _applicationName);
}), getLoggedInUserObj: (function () {
  _$jscoverage['usergrid.client.js'][61]++;
  var loggedInUser = localStorage.getObject("usergridUser");
  _$jscoverage['usergrid.client.js'][62]++;
  return loggedInUser;
}), getLoggedInUserUUID: (function getLoggedInUserUUID() {
  _$jscoverage['usergrid.client.js'][65]++;
  var loggedInUser = localStorage.getObject("usergridUser");
  _$jscoverage['usergrid.client.js'][66]++;
  return loggedInUser.uuid;
}), getLoggedInUserEmail: (function () {
  _$jscoverage['usergrid.client.js'][69]++;
  var loggedInUser = localStorage.getObject("usergridUser");
  _$jscoverage['usergrid.client.js'][70]++;
  return loggedInUser.email;
}), getLoggedInUserOrgs: (function () {
  _$jscoverage['usergrid.client.js'][73]++;
  var loggedInUser = localStorage.getObject("usergridUser");
  _$jscoverage['usergrid.client.js'][74]++;
  return loggedInUser.organizations;
}), setLoggedInUser: (function (_loggedInUser) {
  _$jscoverage['usergrid.client.js'][77]++;
  localStorage.setObject("usergridUser", _loggedInUser);
}), getAccessToken: (function () {
  _$jscoverage['usergrid.client.js'][82]++;
  var accessToken = localStorage.getItem("accessToken");
  _$jscoverage['usergrid.client.js'][83]++;
  return accessToken;
}), setAccessToken: (function (_accessToken) {
  _$jscoverage['usergrid.client.js'][86]++;
  localStorage.setItem("accessToken", _accessToken);
}), saveAll: (function (_organization, _applicationId, _loggedInUser, _accessToken) {
  _$jscoverage['usergrid.client.js'][91]++;
  this.setOrganization(_organization);
  _$jscoverage['usergrid.client.js'][92]++;
  this.setApplicationId(_applicationId);
  _$jscoverage['usergrid.client.js'][93]++;
  this.setLoggedInUser(_loggedInUser);
  _$jscoverage['usergrid.client.js'][94]++;
  this.setAccessToken(_accessToken);
}), clearAll: (function () {
  _$jscoverage['usergrid.client.js'][99]++;
  localStorage.removeItem("accessToken");
  _$jscoverage['usergrid.client.js'][100]++;
  localStorage.removeItem("usergridUser");
  _$jscoverage['usergrid.client.js'][101]++;
  localStorage.removeItem("currentOrganization");
  _$jscoverage['usergrid.client.js'][102]++;
  localStorage.removeItem("currentApplicationId");
  _$jscoverage['usergrid.client.js'][103]++;
  localStorage.removeItem("currentApplicationName");
}), loggedIn: (function () {
  _$jscoverage['usergrid.client.js'][108]++;
  var loggedInUser = this.getLoggedInUserObj();
  _$jscoverage['usergrid.client.js'][109]++;
  var accessToken = this.getAccessToken();
  _$jscoverage['usergrid.client.js'][110]++;
  return (loggedInUser && accessToken);
})};
_$jscoverage['usergrid.client.js'][114]++;
var usergrid = usergrid || {};
_$jscoverage['usergrid.client.js'][116]++;
usergrid.client = (function () {
  _$jscoverage['usergrid.client.js'][119]++;
  var FORCE_PUBLIC_API = true;
  _$jscoverage['usergrid.client.js'][120]++;
  var PUBLIC_API_URL = "https://api.usergrid.com";
  _$jscoverage['usergrid.client.js'][123]++;
  var APIGEE_TLD = "apigee.com";
  _$jscoverage['usergrid.client.js'][124]++;
  var USE_SSO = "no";
  _$jscoverage['usergrid.client.js'][125]++;
  var APIGEE_SSO_URL = "https://accounts.apigee.com/accounts/sign_in";
  _$jscoverage['usergrid.client.js'][126]++;
  var APIGEE_SSO_PROFILE_URL = "https://accounts.apigee.com/accounts/my_account";
  _$jscoverage['usergrid.client.js'][127]++;
  var SSO_LOGOUT_PAGE = "https://accounts.apigee.com/accounts/sign_out";
  _$jscoverage['usergrid.client.js'][130]++;
  var LOCAL_STANDALONE_API_URL = "http://localhost:8080";
  _$jscoverage['usergrid.client.js'][131]++;
  var LOCAL_TOMCAT_API_URL = "http://localhost:8080/ROOT";
  _$jscoverage['usergrid.client.js'][132]++;
  var LOCAL_API_URL = LOCAL_STANDALONE_API_URL;
  _$jscoverage['usergrid.client.js'][135]++;
  function Init(query_params, clientId, clientSecret, apiUrl) {
    _$jscoverage['usergrid.client.js'][136]++;
    self.clientId = clientId || null;
    _$jscoverage['usergrid.client.js'][137]++;
    self.clientSecret = clientSecret || null;
    _$jscoverage['usergrid.client.js'][139]++;
    if (! FORCE_PUBLIC_API && (document.domain.substring(0, 9) == "localhost")) {
      _$jscoverage['usergrid.client.js'][140]++;
      self.apiUrl = LOCAL_API_URL;
    }
    _$jscoverage['usergrid.client.js'][143]++;
    if (query_params.api_url) {
      _$jscoverage['usergrid.client.js'][144]++;
      self.apiUrl = query_params.api_url;
    }
    _$jscoverage['usergrid.client.js'][147]++;
    self.use_sso = USE_SSO;
    _$jscoverage['usergrid.client.js'][148]++;
    if (query_params.use_sso) {
      _$jscoverage['usergrid.client.js'][149]++;
      self.use_sso = query_params.use_sso;
    }
    _$jscoverage['usergrid.client.js'][152]++;
    self.apigee_sso_url = APIGEE_SSO_URL;
    _$jscoverage['usergrid.client.js'][153]++;
    if (query_params.apigee_sso_url) {
      _$jscoverage['usergrid.client.js'][154]++;
      self.apigee_sso_url = query_params.apigee_sso_url;
    }
    _$jscoverage['usergrid.client.js'][157]++;
    self.apigee_sso_profile_url = APIGEE_SSO_PROFILE_URL;
    _$jscoverage['usergrid.client.js'][158]++;
    if (query_params.apigee_sso_profile_url) {
      _$jscoverage['usergrid.client.js'][159]++;
      self.apigee_sso_profile_url = query_params.apigee_sso_profile_url;
    }
    _$jscoverage['usergrid.client.js'][162]++;
    if (apiUrl) {
      _$jscoverage['usergrid.client.js'][163]++;
      self.apiUrl = apiUrl;
    }
    _$jscoverage['usergrid.client.js'][166]++;
    self.resetPasswordUrl = self.apiUrl + "/management/users/resetpw";
}
  _$jscoverage['usergrid.client.js'][176]++;
  function loginAdmin(email, password, successCallback, errorCallback) {
    _$jscoverage['usergrid.client.js'][177]++;
    session.clearAll();
    _$jscoverage['usergrid.client.js'][178]++;
    var formdata = {grant_type: "password", username: email, password: password};
    _$jscoverage['usergrid.client.js'][183]++;
    runManagementQuery(new queryObj("GET", "token", null, formdata, (function (response) {
  _$jscoverage['usergrid.client.js'][185]++;
  if (! response) {
    _$jscoverage['usergrid.client.js'][186]++;
    errorCallback;
    _$jscoverage['usergrid.client.js'][187]++;
    return;
  }
  _$jscoverage['usergrid.client.js'][189]++;
  var firstOrg = null;
  _$jscoverage['usergrid.client.js'][190]++;
  var organization = null;
  _$jscoverage['usergrid.client.js'][191]++;
  for (firstOrg in response.user.organizations) {
    _$jscoverage['usergrid.client.js'][191]++;
    break;
}
  _$jscoverage['usergrid.client.js'][192]++;
  if (firstOrg) {
    _$jscoverage['usergrid.client.js'][193]++;
    organization = response.user.organizations[firstOrg];
  }
  _$jscoverage['usergrid.client.js'][195]++;
  session.saveAll(organization, null, response.user, response.access_token);
  _$jscoverage['usergrid.client.js'][196]++;
  if (successCallback) {
    _$jscoverage['usergrid.client.js'][197]++;
    successCallback(response);
  }
}), errorCallback));
}
  _$jscoverage['usergrid.client.js'][204]++;
  function autoLogin(successCallback, errorCallback) {
    _$jscoverage['usergrid.client.js'][206]++;
    if (! session.loggedIn()) {
      _$jscoverage['usergrid.client.js'][208]++;
      if (useSSO()) {
        _$jscoverage['usergrid.client.js'][209]++;
        Pages.clearPage();
        _$jscoverage['usergrid.client.js'][210]++;
        sendToSSOLoginPage();
      }
    }
    else {
      _$jscoverage['usergrid.client.js'][212]++;
      if (session.loggedIn()) {
        _$jscoverage['usergrid.client.js'][213]++;
        runManagementQuery(new queryObj("GET", "users/" + session.getLoggedInUserEmail(), null, null, (function (response) {
  _$jscoverage['usergrid.client.js'][215]++;
  if (! response) {
    _$jscoverage['usergrid.client.js'][216]++;
    errorCallback;
    _$jscoverage['usergrid.client.js'][217]++;
    return;
  }
  _$jscoverage['usergrid.client.js'][219]++;
  var firstOrg = null;
  _$jscoverage['usergrid.client.js'][220]++;
  var organization = null;
  _$jscoverage['usergrid.client.js'][221]++;
  for (firstOrg in response.data.organizations) {
    _$jscoverage['usergrid.client.js'][221]++;
    break;
}
  _$jscoverage['usergrid.client.js'][222]++;
  if (firstOrg) {
    _$jscoverage['usergrid.client.js'][223]++;
    organization = response.data.organizations[firstOrg];
  }
  _$jscoverage['usergrid.client.js'][225]++;
  session.saveAll(organization, null, response.data, response.data.token);
  _$jscoverage['usergrid.client.js'][226]++;
  if (successCallback) {
    _$jscoverage['usergrid.client.js'][227]++;
    successCallback(response);
  }
}), (function () {
  _$jscoverage['usergrid.client.js'][231]++;
  session.clearAll();
  _$jscoverage['usergrid.client.js'][232]++;
  errorCallback;
})));
        _$jscoverage['usergrid.client.js'][235]++;
        return;
      }
      else {
        _$jscoverage['usergrid.client.js'][237]++;
        errorCallback();
      }
    }
}
  _$jscoverage['usergrid.client.js'][277]++;
  queryObj = (function (_method, _path, _jsonObj, _params, _successCallback, _failureCallback) {
  _$jscoverage['usergrid.client.js'][279]++;
  this.method = _method;
  _$jscoverage['usergrid.client.js'][280]++;
  this.path = _path;
  _$jscoverage['usergrid.client.js'][281]++;
  this.jsonObj = _jsonObj;
  _$jscoverage['usergrid.client.js'][282]++;
  this.params = _params;
  _$jscoverage['usergrid.client.js'][283]++;
  this.successCallback = _successCallback;
  _$jscoverage['usergrid.client.js'][284]++;
  this.failureCallback = _failureCallback;
  _$jscoverage['usergrid.client.js'][287]++;
  this.curl = "";
  _$jscoverage['usergrid.client.js'][290]++;
  this.cursor = null;
  _$jscoverage['usergrid.client.js'][291]++;
  this.next = null;
  _$jscoverage['usergrid.client.js'][292]++;
  this.previous = [];
});
  _$jscoverage['usergrid.client.js'][295]++;
  queryObj.prototype.getMethod = (function getMethod() {
  _$jscoverage['usergrid.client.js'][295]++;
  return this.method;
});
  _$jscoverage['usergrid.client.js'][296]++;
  queryObj.prototype.setMethod = (function setMethod(_method) {
  _$jscoverage['usergrid.client.js'][296]++;
  this.method = _method;
});
  _$jscoverage['usergrid.client.js'][298]++;
  queryObj.prototype.getPath = (function getPath() {
  _$jscoverage['usergrid.client.js'][298]++;
  return this.path;
});
  _$jscoverage['usergrid.client.js'][299]++;
  queryObj.prototype.setPath = (function setPath(_path) {
  _$jscoverage['usergrid.client.js'][299]++;
  this.path = _path;
});
  _$jscoverage['usergrid.client.js'][301]++;
  queryObj.prototype.getJsonObj = (function getJsonObj() {
  _$jscoverage['usergrid.client.js'][301]++;
  return this.jsonObj;
});
  _$jscoverage['usergrid.client.js'][302]++;
  queryObj.prototype.setJsonObj = (function setJsonObj(_jsonObj) {
  _$jscoverage['usergrid.client.js'][302]++;
  this.jsonObj = _jsonObj;
});
  _$jscoverage['usergrid.client.js'][304]++;
  queryObj.prototype.getParams = (function getParams() {
  _$jscoverage['usergrid.client.js'][304]++;
  return this.params;
});
  _$jscoverage['usergrid.client.js'][305]++;
  queryObj.prototype.setParams = (function setParams(_params) {
  _$jscoverage['usergrid.client.js'][305]++;
  this.params = _params;
});
  _$jscoverage['usergrid.client.js'][307]++;
  queryObj.prototype.getSuccessCallback = (function getSuccessCallback() {
  _$jscoverage['usergrid.client.js'][307]++;
  return this.successCallback;
});
  _$jscoverage['usergrid.client.js'][308]++;
  queryObj.prototype.setSuccessCallback = (function setSuccessCallback(_successCallback) {
  _$jscoverage['usergrid.client.js'][308]++;
  this.successCallback = _successCallback;
});
  _$jscoverage['usergrid.client.js'][309]++;
  queryObj.prototype.callSuccessCallback = (function callSuccessCallback(response) {
  _$jscoverage['usergrid.client.js'][309]++;
  this.successCallback(response);
});
  _$jscoverage['usergrid.client.js'][311]++;
  queryObj.prototype.getFailureCallback = (function getFailureCallback() {
  _$jscoverage['usergrid.client.js'][311]++;
  return this.failureCallback;
});
  _$jscoverage['usergrid.client.js'][312]++;
  queryObj.prototype.setFailureCallback = (function setFailureCallback(_failureCallback) {
  _$jscoverage['usergrid.client.js'][312]++;
  this.failureCallback = _failureCallback;
});
  _$jscoverage['usergrid.client.js'][313]++;
  queryObj.prototype.callFailureCallback = (function callFailureCallback(response) {
  _$jscoverage['usergrid.client.js'][313]++;
  this.failureCallback(response);
});
  _$jscoverage['usergrid.client.js'][315]++;
  queryObj.prototype.getCurl = (function getCurl() {
  _$jscoverage['usergrid.client.js'][315]++;
  return this.curl;
});
  _$jscoverage['usergrid.client.js'][316]++;
  queryObj.prototype.setCurl = (function setCurl(_curl) {
  _$jscoverage['usergrid.client.js'][316]++;
  this.curl = _curl;
});
  _$jscoverage['usergrid.client.js'][319]++;
  queryObj.prototype.resetPaging = (function resetPaging() {
  _$jscoverage['usergrid.client.js'][320]++;
  this.previous = [];
  _$jscoverage['usergrid.client.js'][321]++;
  this.next = null;
  _$jscoverage['usergrid.client.js'][322]++;
  this.cursor = null;
});
  _$jscoverage['usergrid.client.js'][325]++;
  queryObj.prototype.hasPrevious = (function hasPrevious() {
  _$jscoverage['usergrid.client.js'][326]++;
  return (this.previous.length > 0);
});
  _$jscoverage['usergrid.client.js'][329]++;
  queryObj.prototype.getPrevious = (function getPrevious() {
  _$jscoverage['usergrid.client.js'][330]++;
  this.next = null;
  _$jscoverage['usergrid.client.js'][331]++;
  this.cursor = this.previous.pop();
});
  _$jscoverage['usergrid.client.js'][334]++;
  queryObj.prototype.hasNext = (function hasNext() {
  _$jscoverage['usergrid.client.js'][335]++;
  return this.next;
});
  _$jscoverage['usergrid.client.js'][338]++;
  queryObj.prototype.getNext = (function getNext() {
  _$jscoverage['usergrid.client.js'][339]++;
  this.previous.push(this.cursor);
  _$jscoverage['usergrid.client.js'][340]++;
  this.cursor = this.next;
});
  _$jscoverage['usergrid.client.js'][343]++;
  queryObj.prototype.saveCursor = (function saveCursor(_cursor) {
  _$jscoverage['usergrid.client.js'][344]++;
  this.cursor = this.next;
  _$jscoverage['usergrid.client.js'][346]++;
  if (this.next != _cursor) {
    _$jscoverage['usergrid.client.js'][347]++;
    this.next = _cursor;
  }
  else {
    _$jscoverage['usergrid.client.js'][349]++;
    this.next = null;
  }
});
  _$jscoverage['usergrid.client.js'][353]++;
  queryObj.prototype.getCursor = (function getCursor() {
  _$jscoverage['usergrid.client.js'][354]++;
  return this.cursor;
});
  _$jscoverage['usergrid.client.js'][364]++;
  function runAppQuery(_queryObj) {
    _$jscoverage['usergrid.client.js'][365]++;
    var endpoint = "/" + session.getOrganizationUUID() + "/" + session.getApplicationId() + "/";
    _$jscoverage['usergrid.client.js'][366]++;
    processQuery(_queryObj, endpoint);
}
  _$jscoverage['usergrid.client.js'][375]++;
  function runManagementQuery(_queryObj) {
    _$jscoverage['usergrid.client.js'][376]++;
    var endpoint = "/management/";
    _$jscoverage['usergrid.client.js'][377]++;
    processQuery(_queryObj, endpoint);
}
  _$jscoverage['usergrid.client.js'][386]++;
  function processQuery(_queryObj, endpoint) {
    _$jscoverage['usergrid.client.js'][387]++;
    var curl = "curl";
    _$jscoverage['usergrid.client.js'][389]++;
    try {
      _$jscoverage['usergrid.client.js'][390]++;
      var method = _queryObj.getMethod().toUpperCase();
      _$jscoverage['usergrid.client.js'][391]++;
      var path = _queryObj.getPath();
      _$jscoverage['usergrid.client.js'][392]++;
      var jsonObj = _queryObj.getJsonObj() || {};
      _$jscoverage['usergrid.client.js'][393]++;
      var params = _queryObj.getParams() || {};
      _$jscoverage['usergrid.client.js'][396]++;
      if (method != "GET" && method != "POST" && method != "PUT" && method != "DELETE") {
        _$jscoverage['usergrid.client.js'][397]++;
        throw (new Error("Invalid method - should be GET, POST, PUT, or DELETE."));
      }
      _$jscoverage['usergrid.client.js'][400]++;
      if (method == "POST") {
        _$jscoverage['usergrid.client.js'][400]++;
        curl += " -X POST";
      }
      else {
        _$jscoverage['usergrid.client.js'][401]++;
        if (method == "PUT") {
          _$jscoverage['usergrid.client.js'][401]++;
          curl += " -X PUT";
        }
        else {
          _$jscoverage['usergrid.client.js'][402]++;
          if (method == "DELETE") {
            _$jscoverage['usergrid.client.js'][402]++;
            curl += " -X DELETE";
          }
          else {
            _$jscoverage['usergrid.client.js'][403]++;
            curl += " -X GET";
          }
        }
      }
      _$jscoverage['usergrid.client.js'][406]++;
      var application_name = session.getApplicationName();
      _$jscoverage['usergrid.client.js'][407]++;
      if (application_name) {
        _$jscoverage['usergrid.client.js'][408]++;
        application_name = application_nametoUpperCase();
      }
      _$jscoverage['usergrid.client.js'][410]++;
      if (application_name != "SANDBOX" && session.getAccessToken()) {
        _$jscoverage['usergrid.client.js'][411]++;
        curl += " -i -H \"Authorization: Bearer " + session.getAccessToken() + "\"";
      }
      _$jscoverage['usergrid.client.js'][415]++;
      _params = JSON.stringify(params);
      _$jscoverage['usergrid.client.js'][416]++;
      if (! jsonlint.parse(_params)) {
        _$jscoverage['usergrid.client.js'][417]++;
        throw (new Error("Params object is not valid."));
      }
      _$jscoverage['usergrid.client.js'][421]++;
      if (_queryObj.getCursor()) {
        _$jscoverage['usergrid.client.js'][422]++;
        params.cursor = _queryObj.getCursor();
      }
      else {
        _$jscoverage['usergrid.client.js'][424]++;
        delete params.cursor;
      }
      _$jscoverage['usergrid.client.js'][428]++;
      path = endpoint + path;
      _$jscoverage['usergrid.client.js'][431]++;
      if (path) {
        _$jscoverage['usergrid.client.js'][433]++;
        while (path.indexOf("//") != -1) {
          _$jscoverage['usergrid.client.js'][434]++;
          path = path.replace("//", "/");
}
      }
      _$jscoverage['usergrid.client.js'][439]++;
      curl += " " + self.apiUrl + path;
      _$jscoverage['usergrid.client.js'][442]++;
      var encoded_params = encodeParams(params);
      _$jscoverage['usergrid.client.js'][443]++;
      if (encoded_params) {
        _$jscoverage['usergrid.client.js'][444]++;
        curl += "?" + encoded_params;
      }
      _$jscoverage['usergrid.client.js'][448]++;
      if ((method == "GET") || (method == "DELETE")) {
        _$jscoverage['usergrid.client.js'][449]++;
        params._ = new Date().getTime();
      }
      _$jscoverage['usergrid.client.js'][453]++;
      var encoded_params = encodeParams(params);
      _$jscoverage['usergrid.client.js'][454]++;
      if (encoded_params) {
        _$jscoverage['usergrid.client.js'][455]++;
        path += "?" + encoded_params;
      }
      _$jscoverage['usergrid.client.js'][459]++;
      jsonObj = JSON.stringify(jsonObj);
      _$jscoverage['usergrid.client.js'][460]++;
      if (! jsonlint.parse(jsonObj)) {
        _$jscoverage['usergrid.client.js'][461]++;
        throw (new Error("JSON object is not valid."));
      }
      _$jscoverage['usergrid.client.js'][463]++;
      if (jsonObj == "{}") {
        _$jscoverage['usergrid.client.js'][464]++;
        jsonObj = null;
      }
      else {
        _$jscoverage['usergrid.client.js'][467]++;
        curl += " -d '" + jsonObj + "'";
      }
    }
    catch (e) {
      _$jscoverage['usergrid.client.js'][472]++;
      console.log("processQuery - error occured -" + e.message);
      _$jscoverage['usergrid.client.js'][473]++;
      return false;
    }
    _$jscoverage['usergrid.client.js'][476]++;
    console.log(curl);
    _$jscoverage['usergrid.client.js'][478]++;
    _queryObj.setCurl(curl);
    _$jscoverage['usergrid.client.js'][481]++;
    apiRequest(method, path, jsonObj, (function (response) {
  _$jscoverage['usergrid.client.js'][484]++;
  _queryObj.saveCursor(response.cursor);
  _$jscoverage['usergrid.client.js'][486]++;
  _queryObj.callSuccessCallback(response);
}), (function (response) {
  _$jscoverage['usergrid.client.js'][489]++;
  console.log("API call failed - " + response.responseText);
  _$jscoverage['usergrid.client.js'][490]++;
  _queryObj.callFailureCallback(response);
}));
}
  _$jscoverage['usergrid.client.js'][501]++;
  function apiRequest(method, path, data, successCallback, errorCallback) {
    _$jscoverage['usergrid.client.js'][503]++;
    var ajaxOptions = {type: method.toUpperCase(), url: self.apiUrl + path, success: successCallback, error: errorCallback, data: data || {}, contentType: "application/json; charset=utf-8", dataType: "json"};
    _$jscoverage['usergrid.client.js'][514]++;
    var accessToken = session.getAccessToken();
    _$jscoverage['usergrid.client.js'][515]++;
    if (onIE) {
      _$jscoverage['usergrid.client.js'][516]++;
      ajaxOptions.dataType = "jsonp";
      _$jscoverage['usergrid.client.js'][517]++;
      if (accessToken) {
        _$jscoverage['usergrid.client.js'][517]++;
        ajaxOptions.data.access_token = accessToken;
      }
    }
    else {
      _$jscoverage['usergrid.client.js'][519]++;
      ajaxOptions.beforeSend = (function (xhr) {
  _$jscoverage['usergrid.client.js'][520]++;
  if (accessToken) {
    _$jscoverage['usergrid.client.js'][520]++;
    xhr.setRequestHeader("Authorization", "Bearer " + accessToken);
  }
});
    }
    _$jscoverage['usergrid.client.js'][524]++;
    $.ajax(ajaxOptions);
}
  _$jscoverage['usergrid.client.js'][533]++;
  function encodeParams(params) {
    _$jscoverage['usergrid.client.js'][534]++;
    tail = [];
    _$jscoverage['usergrid.client.js'][535]++;
    var item = [];
    _$jscoverage['usergrid.client.js'][536]++;
    if (params instanceof Array) {
      _$jscoverage['usergrid.client.js'][537]++;
      for (i in params) {
        _$jscoverage['usergrid.client.js'][538]++;
        item = params[i];
        _$jscoverage['usergrid.client.js'][539]++;
        if ((item instanceof Array) && (item.length > 1)) {
          _$jscoverage['usergrid.client.js'][540]++;
          tail.push(item[0] + "=" + encodeURIComponent(item[1]));
        }
}
    }
    else {
      _$jscoverage['usergrid.client.js'][544]++;
      for (var key in params) {
        _$jscoverage['usergrid.client.js'][545]++;
        if (params.hasOwnProperty(key)) {
          _$jscoverage['usergrid.client.js'][546]++;
          var value = params[key];
          _$jscoverage['usergrid.client.js'][547]++;
          if (value instanceof Array) {
            _$jscoverage['usergrid.client.js'][548]++;
            for (i in value) {
              _$jscoverage['usergrid.client.js'][549]++;
              item = value[i];
              _$jscoverage['usergrid.client.js'][550]++;
              tail.push(key + "=" + encodeURIComponent(item));
}
          }
          else {
            _$jscoverage['usergrid.client.js'][553]++;
            tail.push(key + "=" + encodeURIComponent(value));
          }
        }
}
    }
    _$jscoverage['usergrid.client.js'][558]++;
    return tail.join("&");
}
  _$jscoverage['usergrid.client.js'][566]++;
  function useSSO() {
    _$jscoverage['usergrid.client.js'][567]++;
    return apigeeUser() || self.use_sso == "true" || self.use_sso == "yes";
}
  _$jscoverage['usergrid.client.js'][570]++;
  function apigeeUser() {
    _$jscoverage['usergrid.client.js'][571]++;
    return window.location.host == APIGEE_TLD;
}
  _$jscoverage['usergrid.client.js'][574]++;
  function sendToSSOLogoutPage() {
    _$jscoverage['usergrid.client.js'][575]++;
    var newLoc = self.sso_logout_page + "?callback=" + getSSOCallback();
    _$jscoverage['usergrid.client.js'][576]++;
    window.location = newLoc;
    _$jscoverage['usergrid.client.js'][577]++;
    return false;
}
  _$jscoverage['usergrid.client.js'][580]++;
  function sendToSSOLoginPage() {
    _$jscoverage['usergrid.client.js'][581]++;
    var newLoc = self.apigee_sso_url + "?callback=" + getSSOCallback();
    _$jscoverage['usergrid.client.js'][582]++;
    window.location = newLoc;
    _$jscoverage['usergrid.client.js'][583]++;
    throw "stop!";
    _$jscoverage['usergrid.client.js'][584]++;
    return false;
}
  _$jscoverage['usergrid.client.js'][587]++;
  function sendToSSOProfilePage() {
    _$jscoverage['usergrid.client.js'][588]++;
    var newLoc = self.apigee_sso_profile_url + "?callback=" + getSSOCallback();
    _$jscoverage['usergrid.client.js'][589]++;
    window.location = newLoc;
    _$jscoverage['usergrid.client.js'][590]++;
    throw "stop!";
    _$jscoverage['usergrid.client.js'][591]++;
    return false;
}
  _$jscoverage['usergrid.client.js'][594]++;
  function getSSOCallback() {
    _$jscoverage['usergrid.client.js'][595]++;
    var callback = window.location.protocol + "//" + window.location.host + window.location.pathname;
    _$jscoverage['usergrid.client.js'][596]++;
    var separatorMark = "?";
    _$jscoverage['usergrid.client.js'][597]++;
    if (self.use_sso == "true" || self.use_sso == "yes") {
      _$jscoverage['usergrid.client.js'][598]++;
      callback = callback + separatorMark + "use_sso=" + self.use_sso;
      _$jscoverage['usergrid.client.js'][599]++;
      separatorMark = "&";
    }
    _$jscoverage['usergrid.client.js'][601]++;
    if (self.apiUrl != PUBLIC_API_URL) {
      _$jscoverage['usergrid.client.js'][602]++;
      callback = callback + separatorMark + "api_url=" + self.apiUrl;
      _$jscoverage['usergrid.client.js'][603]++;
      separatorMark = "&";
    }
    _$jscoverage['usergrid.client.js'][605]++;
    return encodeURIComponent(callback);
}
  _$jscoverage['usergrid.client.js'][614]++;
  var self = {session: session, Init: Init, apiUrl: PUBLIC_API_URL, sso_logout_page: SSO_LOGOUT_PAGE, useSSO: useSSO, sendToSSOLogoutPage: sendToSSOLogoutPage, sendToSSOLoginPage: sendToSSOLoginPage, sendToSSOProfilePage: sendToSSOProfilePage, getSSOCallback: getSSOCallback, loginAdmin: loginAdmin, autoLogin: autoLogin, runAppQuery: runAppQuery, runManagementQuery: runManagementQuery, queryObj: queryObj, apiRequest: apiRequest};
  _$jscoverage['usergrid.client.js'][632]++;
  return self;
})();
_$jscoverage['usergrid.client.js'].source = ["/*"," * usergrid.client.js"," *"," * Usage: This class makes the actual calls to the Usergrid API."," *"," *"," */","/*","  *  @class session","  *  @purpose a class of standardized methods for accessing local storage","  *","  */"," var session = {","   getOrganizationObj: function () {","    var organization = localStorage.getObject('currentOrganization');","    return organization;","  },","  getOrganizationUUID : function() {","    var organization = localStorage.getObject('currentOrganization');","    return organization.uuid;","  },","  getOrganizationName : function() {","    var organization = localStorage.getObject('currentOrganization');","    return organization.name;","  },","  setOrganization : function(_organization) {","    localStorage.setObject('currentOrganization', _organization);","  },","  setOrganizationObj : function(_organization) {","    localStorage.setObject('currentOrganization', _organization);","  },","  setOrganizationName : function(_name) {","    organization = {};","    organization.name= _name;","    localStorage.setObject('currentOrganization', organization);","  },","  setOrganizationUUID : function(_uuid) {","    organization = {};","    organization.uuid = _uuid;","    localStorage.setObject('currentOrganization', organization);","  },","","  //application id access and setter methods","  getApplicationId : function() {","    var applicationId = localStorage.getItem('currentApplicationId');","    return applicationId;","  },","  setApplicationId : function(_applicationId) {","    localStorage.setItem('currentApplicationId', _applicationId);","  },","  getApplicationName : function() {","    var applicationName = localStorage.getItem('currentApplicationName');","    return applicationName;","  },","  setApplicationName : function(_applicationName) {","    localStorage.setItem('currentApplicationName', _applicationName);","  },","","  //logged in user access and setter methods","  getLoggedInUserObj : function() {","    var loggedInUser = localStorage.getObject('usergridUser');","    return loggedInUser;","  },","  getLoggedInUserUUID : function getLoggedInUserUUID() {","    var loggedInUser = localStorage.getObject('usergridUser');","    return loggedInUser.uuid;","  },","  getLoggedInUserEmail : function() {","    var loggedInUser = localStorage.getObject('usergridUser');","    return loggedInUser.email;","  },","  getLoggedInUserOrgs : function() {","    var loggedInUser = localStorage.getObject('usergridUser');","    return loggedInUser.organizations;","  },","  setLoggedInUser : function(_loggedInUser) {","    localStorage.setObject('usergridUser', _loggedInUser);","  },","","  //access token access and setter methods","  getAccessToken : function() {","    var accessToken = localStorage.getItem('accessToken');","    return accessToken;","  },","  setAccessToken : function(_accessToken) {","    localStorage.setItem('accessToken', _accessToken);","  },","","  //convenience method for saving all active user vars at once","  saveAll : function(_organization, _applicationId, _loggedInUser, _accessToken) {","    this.setOrganization(_organization);","    this.setApplicationId(_applicationId);","    this.setLoggedInUser(_loggedInUser);","    this.setAccessToken(_accessToken);","  },","","  //convenience method for clearing all active user vars at once","  clearAll : function() {","    localStorage.removeItem('accessToken');","    localStorage.removeItem('usergridUser');","    localStorage.removeItem('currentOrganization');","    localStorage.removeItem('currentApplicationId');","    localStorage.removeItem('currentApplicationName');","  },","","  //method to check if user is logged in","  loggedIn : function() {","    var loggedInUser = this.getLoggedInUserObj();","    var accessToken = this.getAccessToken();","    return (loggedInUser &amp;&amp; accessToken);","  }","}","","var usergrid = usergrid || {};","","usergrid.client = (function() {","  // reference to the session manager - used to access local storage","  //API endpoint","  var FORCE_PUBLIC_API = true; // Always use public API","  var PUBLIC_API_URL = \"https://api.usergrid.com\";","","  //SSO information - Apigee Specific","  var APIGEE_TLD = \"apigee.com\";","  var USE_SSO = 'no'; // flag to overide use SSO if needed set to ?use_sso=no","  var APIGEE_SSO_URL = \"https://accounts.apigee.com/accounts/sign_in\";","  var APIGEE_SSO_PROFILE_URL = \"https://accounts.apigee.com/accounts/my_account\";","  var SSO_LOGOUT_PAGE = 'https://accounts.apigee.com/accounts/sign_out';","","  // for running Usergrid as a local server","  var LOCAL_STANDALONE_API_URL = \"http://localhost:8080\";","  var LOCAL_TOMCAT_API_URL = \"http://localhost:8080/ROOT\";","  var LOCAL_API_URL = LOCAL_STANDALONE_API_URL;","","  //initialization method should be called up front","  function Init(query_params, clientId, clientSecret, apiUrl) {","    self.clientId = clientId || null;","    self.clientSecret = clientSecret || null;","","    if (!FORCE_PUBLIC_API &amp;&amp; (document.domain.substring(0,9) == \"localhost\")) {","      self.apiUrl = LOCAL_API_URL;","    }","","    if (query_params.api_url) {","      self.apiUrl = query_params.api_url;","    }","","    self.use_sso = USE_SSO;","    if (query_params.use_sso) {","      self.use_sso = query_params.use_sso;","    }","","    self.apigee_sso_url = APIGEE_SSO_URL;","    if (query_params.apigee_sso_url) {","      self.apigee_sso_url = query_params.apigee_sso_url;","    }","","    self.apigee_sso_profile_url = APIGEE_SSO_PROFILE_URL;","    if (query_params.apigee_sso_profile_url) {","      self.apigee_sso_profile_url = query_params.apigee_sso_profile_url;","    }","","    if (apiUrl) {","      self.apiUrl = apiUrl;","    }","","    self.resetPasswordUrl = self.apiUrl + \"/management/users/resetpw\";","","  }","","  /*******************************************************************","   *","   * login functions","   *","   ******************************************************************/","  ","  function loginAdmin(email, password, successCallback, errorCallback) {","    session.clearAll();","    var formdata = {","      grant_type: \"password\",","      username: email,","      password: password","    };","    runManagementQuery(new queryObj('GET', 'token', null, formdata,","      function(response) {","        if (!response) {","          errorCallback;","          return","        }","        var firstOrg = null;","        var organization = null;","        for (firstOrg in response.user.organizations) {break;}","        if (firstOrg) {","          organization = response.user.organizations[firstOrg];","        }","        session.saveAll(organization, null, response.user, response.access_token);","        if (successCallback) {","          successCallback(response);","        }","      },","      errorCallback","    ));","  }","","  function autoLogin(successCallback, errorCallback) {","    // check to see if the user has a valid token","    if (!session.loggedIn()) {","      // test to see if the Portal is running on Apigee, if so, send to SSO, if not, fall through to login screen","      if ( useSSO() ){","        Pages.clearPage();","        sendToSSOLoginPage();","      }","    } else if (session.loggedIn()) {","      runManagementQuery(new queryObj(\"GET\",\"users/\" + session.getLoggedInUserEmail(), null, null,","        function(response) {","          if (!response) {","            errorCallback;","            return","          }","          var firstOrg = null;","          var organization = null;","          for (firstOrg in response.data.organizations) {break;}","          if (firstOrg) {","            organization = response.data.organizations[firstOrg];","          }","          session.saveAll(organization, null, response.data, response.data.token);","          if (successCallback) {","            successCallback(response);","          }","        },","        function() {","          session.clearAll();","          errorCallback;","        }","      ));","      return;","    } else {","      errorCallback()","    }","  }","","  /*******************************************************************","   *","   * Query object","   *","   * Usage: The goal of the query object is to make it easy to run any","   *        kind of CRUD call against the API.  This is done as follows:","   *","   *        1.  Create a query object:","   *        queryObj = new client.queryObj(\"GET\", \"users\", null, function() { alert(\"success\"); }, function() { alert(\"failure\"); });","   *","   *        2.  Run the query by calling the appropriate endpoint call","   *        runAppQuery(queryObj);","   *        or","   *        runManagementQuery(queryObj);","   *","   *        3. Paging - The queryObj holds the cursor information.  To","   *        use, simply bind click events to functions that call the","   *        getNext and getPrevious methods of the query object.  This","   *        will set the cursor correctly, and the runAppQuery method","   *        can be called again using the same queryObj:","   *        runAppQuery(queryObj);","   *","   ******************************************************************/","","  /*","   *  @class queryObj","   *  @purpose a class for holding all query information and paging state","   *  @purpose a query object that will contain all relevant info for API call","   *  @param _method REQUIRED - GET, POST, PUT, DELETE","   *  @param _path REQUIRED - API resource (e.g. \"users\" or \"users/rod\", should not include http URL or org_name/app_name)","   *  @param _jsonObj NULLABLE - a json data object to be passed to the API","   *  @param _params NULLABLE - query parameters to be encoded and added to the API URL","   *  @param _successCallback REQUIRED - the success callback function","   *  @param _failureCallback REQUIRED - the failure callback function","   *","   */","  queryObj = (function(_method, _path, _jsonObj, _params, _successCallback, _failureCallback) {","    //query vars","    this.method = _method;","    this.path = _path;","    this.jsonObj = _jsonObj;","    this.params = _params;","    this.successCallback = _successCallback;","    this.failureCallback = _failureCallback;","","    //curl command - will be populated by runQuery function","    this.curl = '';","","    //paging vars","    this.cursor = null;","    this.next = null","    this.previous = [];","  });","  //methods for accessing query vars","  queryObj.prototype.getMethod = function getMethod() { return this.method; }","  queryObj.prototype.setMethod = function setMethod(_method) { this.method = _method; }","","  queryObj.prototype.getPath = function getPath() { return this.path; }","  queryObj.prototype.setPath = function setPath(_path) { this.path = _path; }","","  queryObj.prototype.getJsonObj = function getJsonObj() { return this.jsonObj; }","  queryObj.prototype.setJsonObj = function setJsonObj(_jsonObj) { this.jsonObj = _jsonObj; }","","  queryObj.prototype.getParams = function getParams() { return this.params; }","  queryObj.prototype.setParams = function setParams(_params) { this.params = _params; }","","  queryObj.prototype.getSuccessCallback = function getSuccessCallback() { return this.successCallback; }","  queryObj.prototype.setSuccessCallback = function setSuccessCallback(_successCallback) { this.successCallback = _successCallback; }","  queryObj.prototype.callSuccessCallback = function callSuccessCallback(response) { this.successCallback(response); }","","  queryObj.prototype.getFailureCallback = function getFailureCallback() { return this.failureCallback; }","  queryObj.prototype.setFailureCallback = function setFailureCallback(_failureCallback) { this.failureCallback = _failureCallback; }","  queryObj.prototype.callFailureCallback = function callFailureCallback(response) { this.failureCallback(response); }","","  queryObj.prototype.getCurl = function getCurl() { return this.curl; }","  queryObj.prototype.setCurl = function setCurl(_curl) { this.curl = _curl; }","","  //methods for accessing paging functions","  queryObj.prototype.resetPaging = function resetPaging() {","    this.previous = [];","    this.next = null;","    this.cursor = null;","  }","","  queryObj.prototype.hasPrevious = function hasPrevious() {","    return (this.previous.length &gt; 0);","  }","","  queryObj.prototype.getPrevious = function getPrevious() {","    this.next=null; //clear out next so the comparison will find the next item","    this.cursor = this.previous.pop();","  }","","  queryObj.prototype.hasNext = function hasNext(){","    return (this.next);","  }","","  queryObj.prototype.getNext = function getNext() {","    this.previous.push(this.cursor);","    this.cursor = this.next;","  }","","  queryObj.prototype.saveCursor = function saveCursor(_cursor) {","    this.cursor = this.next; //what was new is old again","    //if current cursor is different, grab it for next cursor","    if (this.next != _cursor) {","      this.next = _cursor;","    } else {","      this.next = null;","    }","  }","","  queryObj.prototype.getCursor = function getCursor() {","    return this.cursor;","  }","","","  /*","   *  @function runAppQuery","   *  @purpose public function to run calls against the app endpoint","   *  @params queryObj - {method, path, jsonObj, params, successCallback, failureCallback}","   *","   */","  function runAppQuery(_queryObj) {","    var endpoint = \"/\" + session.getOrganizationUUID() + \"/\" + session.getApplicationId() + \"/\";","    processQuery(_queryObj, endpoint);","  }","","  /*","   *  @function runManagementQuery","   *  @purpose public function to run calls against the management endpoint","   *  @params queryObj - {method, path, jsonObj, params, successCallback, failureCallback}","   *","   */","  function runManagementQuery(_queryObj) {","    var endpoint = \"/management/\";","    processQuery(_queryObj, endpoint)","  }","","  /*","   *  @function processQuery","   *  @purpose to validate and prepare a call to the API","   *  @params queryObj - {method, path, jsonObj, params, successCallback, failureCallback}","   *","   */","  function processQuery(_queryObj, endpoint) {","    var curl = \"curl\";","    //validate parameters","    try {","      var method = _queryObj.getMethod().toUpperCase();","      var path = _queryObj.getPath();","      var jsonObj = _queryObj.getJsonObj() || {};","      var params = _queryObj.getParams() || {};","","      //method - should be GET, POST, PUT, or DELETE only","      if (method != 'GET' &amp;&amp; method != 'POST' &amp;&amp; method != 'PUT' &amp;&amp; method != 'DELETE') {","        throw(new Error('Invalid method - should be GET, POST, PUT, or DELETE.'));","      }","      //curl - add the method to the command (no need to add anything for GET)","      if (method == \"POST\") {curl += \" -X POST\"; }","      else if (method == \"PUT\") { curl += \" -X PUT\"; }","      else if (method == \"DELETE\") { curl += \" -X DELETE\"; }","      else { curl += \" -X GET\"; }","","      //curl - append the bearer token if this is not the sandbox app","      var application_name = session.getApplicationName();","      if (application_name) {","        application_name = application_nametoUpperCase();","      }","      if (application_name != 'SANDBOX' &amp;&amp; session.getAccessToken()) {","        curl += ' -i -H \"Authorization: Bearer ' + session.getAccessToken() + '\"';","      }","      ","      //params - make sure we have a valid json object","      _params = JSON.stringify(params)","      if (!jsonlint.parse(_params)) {","        throw(new Error('Params object is not valid.'));","      }","","      //add in the cursor if one is available","      if (_queryObj.getCursor()) {","        params.cursor = _queryObj.getCursor();","      } else {","        delete params.cursor;","      }","","      //add the endpoint to the path","      path = endpoint + path;","","      //make sure path never has more than one / together","      if (path) {","        //regex to strip multiple slashes","        while(path.indexOf('//') != -1){","          path = path.replace('//', '/');","        }","      }","","      //curl - append the path","      curl += \" \" + self.apiUrl + path;","","      //curl - append params to the path for curl prior to adding the timestamp","      var encoded_params = encodeParams(params);","      if (encoded_params) {","        curl += \"?\" + encoded_params;","      }","","      //add in a timestamp for gets and deletes - to avoid caching by the browser","      if ((method == \"GET\") || (method == \"DELETE\")) {","        params['_'] = new Date().getTime();","      }","","      //append params to the path","      var encoded_params = encodeParams(params);","      if (encoded_params) {","        path += \"?\" + encoded_params;","      }","","      //jsonObj - make sure we have a valid json object","      jsonObj = JSON.stringify(jsonObj)","      if (!jsonlint.parse(jsonObj)) {","        throw(new Error('JSON object is not valid.'));","      }","      if (jsonObj == '{}') {","        jsonObj = null;","      } else {","        //curl - add in the json obj","        curl += \" -d '\" + jsonObj + \"'\";","      }","","    } catch (e) {","      //parameter was invalid","      console.log('processQuery - error occured -' + e.message);","      return false;","    }","    //log the curl command to the console","    console.log(curl);","    //store the curl command back in the object","    _queryObj.setCurl(curl);","","    //send query","    apiRequest(method, path, jsonObj,","      function(response) {","        //query completed succesfully, so store cursor","        _queryObj.saveCursor(response.cursor);","        //then call the original callback","        _queryObj.callSuccessCallback(response);","      },","      function(response) {","        console.log('API call failed - ' + response.responseText);","        _queryObj.callFailureCallback(response)","      });","  }","","  /*","   *  @function apiRequest","   *  @purpose to run the API call","   *  @params queryObj - {method, path, data, successCallback, failureCallback}","   *  @notes - Do not call this method directly.  Use the runAppQuery and runManagementQuery funcitons instead","   *","   */","  function apiRequest(method, path, data, successCallback, errorCallback) {","","    var ajaxOptions = {","      type: method.toUpperCase(),","      url: self.apiUrl + path,","      success: successCallback,","      error: errorCallback,","      data: data || {},","      contentType: \"application/json; charset=utf-8\",","      dataType: \"json\"","    }","","    // work with ie for cross domain scripting","    var accessToken = session.getAccessToken();","    if (onIE) {","      ajaxOptions.dataType = \"jsonp\";","      if (accessToken) { ajaxOptions.data['access_token'] = accessToken }","    } else {","      ajaxOptions.beforeSend = function(xhr) {","        if (accessToken) { xhr.setRequestHeader(\"Authorization\", \"Bearer \" + accessToken) }","      }","    }","","    $.ajax(ajaxOptions);","  }","","  /*","   *  @function encodeParams","   *  @purpose - to encode the query string parameters","   *  @params params - an object of name value pairs that will be urlencoded","   *","   */","  function encodeParams(params) {","    tail = [];","    var item = [];","    if (params instanceof Array) {","      for (i in params) {","        item = params[i];","        if ((item instanceof Array) &amp;&amp; (item.length &gt; 1)) {","          tail.push(item[0] + \"=\" + encodeURIComponent(item[1]));","        }","      }","    } else {","      for (var key in params) {","        if (params.hasOwnProperty(key)) {","          var value = params[key];","          if (value instanceof Array) {","            for (i in value) {","              item = value[i];","              tail.push(key + \"=\" + encodeURIComponent(item));","            }","          } else {","            tail.push(key + \"=\" + encodeURIComponent(value));","          }","        }","      }","    }","    return tail.join(\"&amp;\");","  }","","  /*******************************************************************","   *","   * SSO functions","   *","   ******************************************************************/","  function useSSO() {","    return apigeeUser() || self.use_sso=='true' || self.use_sso=='yes'","  }","","  function apigeeUser() {","    return window.location.host == APIGEE_TLD","  }","","  function sendToSSOLogoutPage() {","    var newLoc= self.sso_logout_page + '?callback=' + getSSOCallback();","    window.location = newLoc;","    return false;","  }","","  function sendToSSOLoginPage() {","    var newLoc = self.apigee_sso_url + '?callback=' + getSSOCallback();","    window.location = newLoc;","    throw \"stop!\";","    return false;","  }","","  function sendToSSOProfilePage() {","    var newLoc = self.apigee_sso_profile_url + '?callback=' + getSSOCallback();","    window.location = newLoc;","    throw \"stop!\";","    return false;","  }","","  function getSSOCallback() {","    var callback = window.location.protocol+'//'+ window.location.host + window.location.pathname;","    var separatorMark = '?';","    if (self.use_sso == 'true' || self.use_sso == 'yes') {","      callback = callback + separatorMark + 'use_sso=' + self.use_sso;","      separatorMark = '&amp;';","    }","    if (self.apiUrl != PUBLIC_API_URL) {","      callback = callback + separatorMark + 'api_url=' + self.apiUrl;","      separatorMark = '&amp;';","    }","    return encodeURIComponent(callback);","  }","","","  /*******************************************************************","   *","   * Public functions","   *","   ******************************************************************/","  var self = {","    session:session,","    Init: Init,","    apiUrl: PUBLIC_API_URL,","    sso_logout_page: SSO_LOGOUT_PAGE,","    useSSO: useSSO,","    sendToSSOLogoutPage: sendToSSOLogoutPage,","    sendToSSOLoginPage: sendToSSOLoginPage,","    sendToSSOProfilePage: sendToSSOProfilePage,","    getSSOCallback: getSSOCallback,","    loginAdmin: loginAdmin,","    autoLogin: autoLogin,","    runAppQuery:runAppQuery,","    runManagementQuery:runManagementQuery,","    queryObj:queryObj,","    apiRequest: apiRequest","  }","","  return self;","})();"];
